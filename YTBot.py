import os
import asyncio
from telethon import TelegramClient, events
from ytmusicapi import YTMusic
import yt_dlp
import logging
from dotenv import load_dotenv

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)


# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Telegram API
API_ID = '23740623'  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à API_ID (—è–∫ —Ä—è–¥–æ–∫)
API_HASH = '79d70c1924d4cbbafcea5b8bcbbd8dc1'  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à API_HASH
BOT_TOKEN = '8173348706:AAFvKfdvUxH-9_UhTo2Wo0QMI03pjLVuyAw'  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à BOT_TOKEN

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è YTMusic API
ytmusic = YTMusic()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è yt-dlp
ydl_opts = {
    'format': 'bestaudio/best',
    'postprocessors': [{
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'mp3',
        'preferredquality': '192',
    }],
    'outtmpl': 'downloads/%(title)s.%(ext)s',
    'quiet': True,
    'no_warnings': True,
}

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç–∞ Telegram
client = TelegramClient('music_bot', API_ID, API_HASH)

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å
if not os.path.exists('downloads'):
    os.makedirs('downloads')

# –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
user_search_results = {}

@client.on(events.NewMessage(pattern='/start'))
async def start_handler(event):
    await event.respond('–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ—à—É–∫—É —Ç–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º—É–∑–∏–∫–∏ –∑ YouTube Music. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É –ø—ñ—Å–Ω—ñ –∞–±–æ —á–∞—Å—Ç–∏–Ω—É —Ç–µ–∫—Å—Ç—É, —ñ —è —Å–ø—Ä–æ–±—É—é –∑–Ω–∞–π—Ç–∏ —ó—ó –¥–ª—è –≤–∞—Å.')

@client.on(events.NewMessage(pattern='/help'))
async def help_handler(event):
    help_text = """
üéµ –Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –±–æ—Ç–æ–º:
1. –ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ –Ω–∞–∑–≤—É –ø—ñ—Å–Ω—ñ –∞–±–æ —á–∞—Å—Ç–∏–Ω—É —Ç–µ–∫—Å—Ç—É
2. –Ø –∑–Ω–∞–π–¥—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –ø—ñ—Å–Ω—ñ –Ω–∞ YouTube Music
3. –í–∏–±–µ—Ä—ñ—Ç—å –ø—ñ—Å–Ω—é –∑—ñ —Å–ø–∏—Å–∫—É, —ñ —è –Ω–∞–¥—ñ—à–ª—é –≤–∞–º –∞—É–¥—ñ–æ—Ñ–∞–π–ª

–ö–æ–º–∞–Ω–¥–∏:
/start - –ü–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É
"""
    await event.respond(help_text)

@client.on(events.NewMessage(func=lambda e: e.text and not e.text.startswith('/')))
async def message_handler(event):
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ —Ü–∏—Ñ—Ä–∞ (–≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–æ—à—É–∫) –∞–±–æ –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç
    if event.text.isdigit():
        await handle_selection(event)
    else:
        await search_music(event)

async def search_music(event):
    search_query = event.text
    chat_id = event.chat_id
    
    # –ë–µ–∑–ø–µ—á–Ω–æ –æ—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if event.sender_id:
        user_id = event.sender_id
    else:
        # –Ø–∫—â–æ ID –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ID —á–∞—Ç—É
        user_id = chat_id
    
    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ—á–∞—Ç–æ–∫ –ø–æ—à—É–∫—É
    status_msg = await event.respond('üîç –®—É–∫–∞—é –ø—ñ—Å–Ω—ñ –∑–∞ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º...')
    
    try:
        # –ü–æ—à—É–∫ –Ω–∞ YouTube Music
        search_results = ytmusic.search(search_query, filter='songs', limit=5)
        
        if not search_results:
            await status_msg.edit('üòï –ù–∞ –∂–∞–ª—å, –∑–∞ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.')
            return
        
        # –§–æ—Ä–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
        result_message = 'üéµ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É:\n\n'
        for i, result in enumerate(search_results, 1):
            title = result['title']
            artists = ', '.join([artist['name'] for artist in result['artists']])
            result_message += f"{i}. **{title}** - {artists}\n"
        
        result_message += '\n–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –Ω–æ–º–µ—Ä –ø—ñ—Å–Ω—ñ, —è–∫—É —Ö–æ—á–µ—Ç–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏.'
        
        await status_msg.edit(result_message)
        
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –¥–ª—è —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user_search_results[user_id] = search_results
        
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞: {str(e)}")
        await status_msg.edit(f'‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–ø–∏—Ç—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.')

async def handle_selection(event):
    user_id = event.sender_id or event.chat_id
    chat_id = event.chat_id
    selected_index = int(event.text) - 1
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –¥–ª—è —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if user_id not in user_search_results:
        await event.respond('–°–ø–æ—á–∞—Ç–∫—É –≤–∏–∫–æ–Ω–∞–π—Ç–µ –ø–æ—à—É–∫ –ø—ñ—Å–Ω—ñ.')
        return
    
    search_results = user_search_results[user_id]
    
    if 0 <= selected_index < len(search_results):
        try:
            selected_song = search_results[selected_index]
            video_id = selected_song['videoId']
            title = selected_song['title']
            artists = ', '.join([artist['name'] for artist in selected_song['artists']])
            
            download_msg = await event.respond(f'‚è±Ô∏è –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é **{title}** - {artists}...')
            
            # URL –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            url = f"https://music.youtube.com/watch?v={video_id}"
            
            # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞—É–¥—ñ–æ
            with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                info = ydl.extract_info(url, download=True)
                filename = ydl.prepare_filename(info).replace('.webm', '.mp3').replace('.m4a', '.mp3')
            
            await download_msg.edit(f'‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ù–∞–¥—Å–∏–ª–∞—é —Ñ–∞–π–ª...')
            
            # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∞—É–¥—ñ–æ—Ñ–∞–π–ª—É
            await client.send_file(
                chat_id,
                filename,
                caption=f'üéµ **{title}** - {artists}',
                voice_note=False
            )
            
            # –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
            os.remove(filename)
            
            # –û—á–∏—â–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –¥–ª—è —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            del user_search_results[user_id]
            
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞: {str(e)}")
            await event.respond(f'‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –ø—ñ—Å–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.')
    else:
        await event.respond('‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –Ω–æ–º–µ—Ä. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å –Ω–æ–º–µ—Ä –∑—ñ —Å–ø–∏—Å–∫—É.')

async def main():
    await client.start(bot_token=BOT_TOKEN)
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è.")
    await client.run_until_disconnected()

if __name__ == '__main__':
    asyncio.run(main())